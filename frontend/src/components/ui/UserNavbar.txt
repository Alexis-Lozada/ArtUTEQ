'use client';

import { useState, useEffect, useRef } from 'react';
import Link from 'next/link';
import { useRouter } from 'next/navigation';
import { FaUserCircle, FaSignOutAlt, FaUser, FaCog, FaHome, FaChartLine, FaBell, FaMapMarkedAlt } from 'react-icons/fa';
import axios from 'axios';
import Swal from 'sweetalert2';

const UserNavbar = () => {
  const [user, setUser] = useState<any>(null);
  const [menuOpen, setMenuOpen] = useState(false);
  const router = useRouter();
  const menuRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    fetchUser();
    
    const handleClickOutside = (event: MouseEvent) => {
      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {
        setMenuOpen(false);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);

  const fetchUser = async () => {
    const token = localStorage.getItem('token');
    if (!token) return router.push('/auth/login');

    try {
      const res = await axios.get('http://localhost:5000/profile', {
        headers: { Authorization: `Bearer ${token}` },
      });
      setUser(res.data);
    } catch (err) {
      Swal.fire('Error', 'Tu sesión ha expirado, vuelve a iniciar sesión.', 'error').then(() => {
        localStorage.removeItem('token');
        router.push('/auth/login');
      });
    }
  };

  const handleLogout = () => {
    Swal.fire({
      title: 'Cerrar sesión',
      text: '¿Seguro que quieres cerrar sesión?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Sí, salir',
      cancelButtonText: 'Cancelar',
    }).then((result) => {
      if (result.isConfirmed) {
        localStorage.removeItem('token');
        router.push('/auth/login');
      }
    });
  };

  return (
    <nav className="bg-dark-blue text-white shadow-md py-4">
      <div className="container mx-auto flex justify-between items-center px-6">
        {/* Logo */}
        <div className="text-2xl font-bold">
          <Link href="/">HealthGuardian</Link>
        </div>

        {/* Menú principal */}
        <div className="hidden md:flex space-x-6">
          <Link href="/" className="flex items-center space-x-2 hover:text-light-blue transition">
            <FaHome />
            <span>Inicio</span>
          </Link>
          <Link href="/prediccion-casos" className="flex items-center space-x-2 hover:text-light-blue transition">
            <FaChartLine />
            <span>Predicción</span>
          </Link>
          <Link href="/mapa-interactivo" className="flex items-center space-x-2 hover:text-light-blue transition">
            <FaMapMarkedAlt />
            <span>Mapa</span>
          </Link>
          <Link href="/notificaciones" className="flex items-center space-x-2 hover:text-light-blue transition">
            <FaBell />
            <span>Notificaciones</span>
          </Link>
        </div>

        {/* Menú de usuario */}
        <div className="relative" ref={menuRef}>
          <button
            className="flex items-center space-x-2 focus:outline-none"
            onClick={() => setMenuOpen(!menuOpen)}
          >
            <FaUserCircle className="text-3xl text-light-blue" />
            <span className="hidden md:block">{user?.nom_usuario || 'Usuario'}</span>
          </button>

          {/* Dropdown */}
          {menuOpen && (
            <div className="absolute right-0 mt-2 w-48 bg-white text-black shadow-lg rounded-lg z-50">
              <div className="px-4 py-2 border-b">
                <p className="text-gray-800 font-semibold">{user?.nom_usuario || 'Usuario'}</p>
                <p className="text-gray-500 text-sm">{user?.correo_usuario || 'Correo'}</p>
              </div>
              <Link href="/perfil" className="flex items-center px-4 py-2 hover:bg-gray-200">
                <FaUser className="mr-2" /> Perfil
              </Link>
              <Link href="/configuracion" className="flex items-center px-4 py-2 hover:bg-gray-200">
                <FaCog className="mr-2" /> Configuración
              </Link>
              <button
                onClick={handleLogout}
                className="flex items-center w-full px-4 py-2 text-red-600 hover:bg-gray-200"
              >
                <FaSignOutAlt className="mr-2" /> Cerrar sesión
              </button>
            </div>
          )}
        </div>
      </div>
    </nav>
  );
};

export default UserNavbar;
